---
- name: Provision a VM from a Proxmox template
  hosts: all
  gather_facts: false
  become: true

  vars:
    proxmox_host: pve-1                     # Remplacez par l'IP ou le FQDN de votre Proxmox
    proxmox_user: "root@pam"                # Remplacez par votre utilisateur Proxmox
    proxmox_password: "Mc/*8956"            # Remplacez par votre mot de passe Proxmox
    vm_id_start: 500                        # L'ID de la première VM créée
    num_vms: 1                              # Nombre de VMs à créer
    vm_template_id: 901                     # ID du template
    template_name: "ubuntu-server-noble"    # Nom du template
    vm_memory: 2048                         # Taille de la mémoire en Mo
    vm_cores: 2                             # Nombre de cores pour le CPU
    vm_disk_size: "20G"                     # Taille du disque de la VM

  tasks:
    - name: Clone Proxmox template to create VMs
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_password: "{{ proxmox_password }}"
        validate_certs: false
        node: "{{ inventory_hostname }}"
        vmid: "{{ vm_id }}"
        name: "{{ vm_name }}"
        clone: "{{ vm_template_id }}"
        memory: "{{ vm_memory }}"
        cores: "{{ vm_cores }}"
        sata0: "local-lvm:{{ vm_disk_size }}"
        net: "virtio,bridge=vmbr0"
        pool: "production_vms"
      loop: "{{ query('sequence', 'start=' + vm_id_start|string + ' count=' + num_vms|string) | map('int') | list }}"
      loop_control:
        loop_var: vm_item
      vars:
        vm_id: "{{ vm_id_start + vm_item }}"
        vm_name: "auto-deployed-vm-{{ vm_id_start + vm_item }}"

    - name: Start the newly cloned VMs
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_password: "{{ proxmox_password }}"
        validate_certs: false
        node: "{{ inventory_hostname }}"
        vmid: "{{ item.id }}"
        state: started
      loop: "{{ query('sequence', 'start=' + vm_id_start|string + ' count=' + num_vms|string) | map('int') | list }}"
      loop_control:
        index_var: vm_index
      vars:
        item:
          id: "{{ vm_id_start + vm_index }}"